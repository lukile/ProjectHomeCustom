/* 
 * openHAB REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Openhab.Client.Model
{
    /// <summary>
    /// ConfigDescriptionDTO
    /// </summary>
    [DataContract]
    public partial class ConfigDescriptionDTO :  IEquatable<ConfigDescriptionDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConfigDescriptionDTO" /> class.
        /// </summary>
        /// <param name="uri">uri.</param>
        /// <param name="parameters">parameters.</param>
        /// <param name="parameterGroups">parameterGroups.</param>
        public ConfigDescriptionDTO(string uri = default(string), List<ConfigDescriptionParameterDTO> parameters = default(List<ConfigDescriptionParameterDTO>), List<ConfigDescriptionParameterGroupDTO> parameterGroups = default(List<ConfigDescriptionParameterGroupDTO>))
        {
            Uri = uri;
            Parameters = parameters;
            ParameterGroups = parameterGroups;
        }
        
        /// <summary>
        /// Gets or Sets Uri
        /// </summary>
        [DataMember(Name="uri", EmitDefaultValue=false)]
        public string Uri { get; set; }

        /// <summary>
        /// Gets or Sets Parameters
        /// </summary>
        [DataMember(Name="parameters", EmitDefaultValue=false)]
        public List<ConfigDescriptionParameterDTO> Parameters { get; set; }

        /// <summary>
        /// Gets or Sets ParameterGroups
        /// </summary>
        [DataMember(Name="parameterGroups", EmitDefaultValue=false)]
        public List<ConfigDescriptionParameterGroupDTO> ParameterGroups { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ConfigDescriptionDTO {\n");
            sb.Append("  Uri: ").Append(Uri).Append("\n");
            sb.Append("  Parameters: ").Append(Parameters).Append("\n");
            sb.Append("  ParameterGroups: ").Append(ParameterGroups).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as ConfigDescriptionDTO);
        }

        /// <summary>
        /// Returns true if ConfigDescriptionDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of ConfigDescriptionDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConfigDescriptionDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    Uri == input.Uri ||
                    (Uri != null &&
                    Uri.Equals(input.Uri))
                ) && 
                (
                    Parameters == input.Parameters ||
                    Parameters != null &&
                    Parameters.SequenceEqual(input.Parameters)
                ) && 
                (
                    ParameterGroups == input.ParameterGroups ||
                    ParameterGroups != null &&
                    ParameterGroups.SequenceEqual(input.ParameterGroups)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (Uri != null)
                    hashCode = hashCode * 59 + Uri.GetHashCode();
                if (Parameters != null)
                    hashCode = hashCode * 59 + Parameters.GetHashCode();
                if (ParameterGroups != null)
                    hashCode = hashCode * 59 + ParameterGroups.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
